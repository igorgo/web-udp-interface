'use strict'

module.exports =
  {
    sockOk: str => str + ':ok',
    sockErr: str => str + ':error',
    mutateSockOk: str => 'SOCKET_' + (str + ':ok').toUpperCase(),
    mutateSockErr: str => 'SOCKET_' + (str + ':error').toUpperCase(),
    actionSockOk: str => 'socket_' + (str + ':ok').replace(/^([A-Z])|[\W\s_]+(\w)/g, (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()),
    actionSockErr: str => 'socket_' + (str + ':error').replace(/^([A-Z])|[\W\s_]+(\w)/g, (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()),

    SE_G_ORA_ERROR: 'sock:oracle:error',
    SE_AUTH_LOGIN: 'sock:auth:logon',
    SE_AUTH_LOGOFF: 'sock:auth:logoff',
    SE_AUTH_CHECK: 'sock:auth:check',
    SE_AUTH_VALIDATE: 'sock:auth:validate',
    SE_USER_DATA_LOAD: 'sock:userdata:load',
    SE_USER_DATA_SAVE_PARAM: 'sock:userdata:save:param',
    SE_PUB_CURRENT_RELEASES: 'sock:pub:curr:releases',
    SE_STATDICT_ALL_UNITS: 'sock:statdict:all:units',
    SE_STATDICT_ALL_APPS: 'sock:statdict:all:apps',
    SE_STATDICT_ALL_BUILDS: 'sock:statdict:all:builds',
    SE_STATDICT_ALL_PERSONS: 'sock:statdict:all:persons',
    SE_STATDICT_ALL_STATUSES: 'sock:statdict:all:statuses',
    SE_APPS_BY_UNIT: 'sock:apps:by:unit',
    SE_UNITFUNCS_BY_UNIT: 'sock:unitfuncs:by:unit',
    SE_CONDITIONS_CLAIMS_LIST: 'sock:conditions:claims:list',
    SE_CONDITIONS_GET_ONE: 'sock:conditions:get:one',
    SE_CONDITIONS_SAVE: 'sock:conditions:save',
    SE_CONDITIONS_DELETE: 'sock:conditions:delete',
    SE_LINKFILES_FIND: 'sock:linkfiles:get',
    SE_LINKFILES_DOWNLOAD: 'sock:linkfiles:download',
    SE_LINKFILES_UPLOAD: 'sock:linkfiles:upload',
    SE_CLAIMS_FIND: 'sock:claims:find',
    SE_CLAIMS_FIND_ONE: 'sock:claims:find:one',
    SE_CLAIMS_HISTORY_FIND: 'sock:claims:history:find',
    SE_CLAIMS_NEXTPOINTS_FIND: 'sock:claims:nextpoints:find',
    SE_CLAIMS_NEXTEXECS_FIND: 'sock:claims:nextexecs:find',
    SE_CLAIMS_AVAIL_ACTIONS_FIND: 'sock:claims:avail:actions:find',
    SE_CLAIMS_DELETE: 'sock:claims:delete',
    SE_CLAIMS_ANNUL: 'sock:claims:annul',
    SE_CLAIMS_UPDATE: 'sock:claims:update',
    SE_CLAIMS_SET_STATUS: 'sock:claims:set:status',
    SE_CLAIMS_INSERT: 'sock:claims:insert',
    SE_CLAIMS_RETURN: 'sock:claims:return',
    SE_CLAIMS_RETURN_MESSAGE: 'sock:claims:return:message',
    SE_CLAIMS_SEND: 'sock:claims:send',
    SE_CLAIMS_CURREXECS_FIND: 'sock:claims:currexecs:find',
    SE_CLAIMS_NOTE_INSERT: 'sock:claims:note:insert',
    SE_CLAIMS_NOTE_UPDATE: 'sock:claims:note:update',
    SE_CLAIMS_NOTE_FIND_ONE: 'sock:claims:note:find:one'
  }
